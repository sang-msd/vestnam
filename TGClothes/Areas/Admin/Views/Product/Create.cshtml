@model TGClothes.Models.ProductImageModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var categories = ViewBag.CategoryId;
    var sizes = ViewBag.Sizes;
}

@section header{
    Tạo mới sản phẩm
}
@section CustomJs{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage1').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage1').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage2').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage2').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage3').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage3').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/Admin/plugin/ckeditor/config.js',
        });
    </script>

    <script>
        function addRow() {
            var table = document.getElementById("sizeStockTable");
            var row = table.insertRow(table.rows.length - 1); // Chèn dòng mới trước dòng cuối cùng (nút "Thêm mới size")

            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);

            cell1.innerHTML = '<input type="text" name="Product.SizeStockList[' + (table.rows.length - 2) + '].Size" class="form-control" />';
            cell2.innerHTML = '<input type="text" name="Product.SizeStockList[' + (table.rows.length - 2) + '].Stock" class="form-control" />';
            cell3.innerHTML = '<button type="button" class="btn btn-danger" onclick="deleteRow(this)">Xóa</button>';
        }

        function deleteRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
    </script>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thêm mới sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
                <a id="btnSelectImage" href="#">Chọn ảnh</a>
                @Html.ValidationMessageFor(model => model.Product.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Thư viện ảnh</label>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Gallery.Image1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Gallery.Image1, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage1" })
                    <a id="btnSelectImage1" href="#">Chọn ảnh</a>
                    @Html.ValidationMessageFor(model => model.Gallery.Image1, "", new { @class = "text-danger" })
                </div>
            </div>

            <label class="col-md-2">Thư viện ảnh 2</label>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Gallery.Image2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Gallery.Image2, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage2" })
                    <a id="btnSelectImage2" href="#">Chọn ảnh</a>
                    @Html.ValidationMessageFor(model => model.Gallery.Image2, "", new { @class = "text-danger" })
                </div>
            </div>

            <label class="col-md-2">Thư viện ảnh 3</label>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Gallery.Image2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Gallery.Image2, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage3" })
                    <a id="btnSelectImage3" href="#">Chọn ảnh</a>
                    @Html.ValidationMessageFor(model => model.Gallery.Image2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.CategoryId, (SelectList)categories, "Select a category", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Promotion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Promotion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Promotion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.TopHot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.TopHot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.MetaKeywords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.MetaDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div id="sizeContainer">
                <div class="sizeRow">
                    <div class="form-group">
                        <label for="size">Size:</label>
                        <select class="sizeSelect form-control" name="Sizes[0].SizeId">
                            @foreach (var size in sizes)
                            {
                                <option value="@size.Id">@size.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="stock">Stock:</label>
                        <input type="number" class="stockInput form-control" name="Sizes[0].Stock" />
                    </div>
                    <button type="button" class="removeSize btn btn-danger">Remove</button>
                </div>
            </div>

            <button type="button" id="addSizeButton" class="btn btn-primary">Add Size</button>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}
